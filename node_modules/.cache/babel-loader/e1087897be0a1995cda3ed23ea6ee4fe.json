{"ast":null,"code":"var _jsxFileName = \"/Users/sahil/weather-react/src/App.js\";\nimport React, { useState } from 'react'; //utilizes api from openweathermap.org \n\nconst api = {\n  key: \"14b09015307faec1135c77dddf821b09\",\n  base: \"https://api.openweathermap.org/data/2.5/\"\n};\n\nfunction App() {\n  const [query, setQuery] = useState('');\n  const [weather, setWeather] = useState({}); //function to get weather using fetch get request to retieve \n  //weather, query, imperial units, appID from API \n\n  const search = evt => {\n    if (evt.key === \"Enter\") {\n      fetch(`${api.base}weather?q=${query}&units=imperial&APPID=${api.key}`).then(res => res.json()).then(result => {\n        setQuery('');\n        setWeather(result);\n        console.log(result);\n      });\n    }\n  }; //dateBuilder const to give us the current month and dat\n\n\n  const dateBuilder = d => {\n    let months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n    let days = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\n    let day = days[d.getDay()]; //returns an index from 0-6 for day\n\n    let date = d.getDate();\n    let month = months[d.getMonth()]; // returns index from 0-11 to represent month\n\n    let year = d.getFullYear();\n    return `${day} ${date} ${month} ${year}`;\n  };\n\n  return (\n    /*#__PURE__*/\n    //if weather is greater than 68 degrees Farenheight, use warm class, else cold class\n    React.createElement(\"div\", {\n      className: typeof weather.main != \"undefined\" ? weather.main.temp > 68 ? 'app warm' : 'app' : 'app',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"main\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"search-box\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      className: \"search-bar\",\n      placeholder: \"Search...\",\n      onChange: e => setQuery(e.target.value),\n      value: query,\n      onKeyPress: search,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }\n    })), typeof weather.main != \"undefined\" ? /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"location-box\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"location\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 13\n      }\n    }, weather.name, \", \", weather.sys.country), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"date\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 13\n      }\n    }, dateBuilder(new Date()))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"weather-box\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"temp\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }\n    }, Math.round(weather.main.temp), \"\\xB0F\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"weather\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }\n    }, weather.weather[0].main))) : ''))\n  );\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/sahil/weather-react/src/App.js"],"names":["React","useState","api","key","base","App","query","setQuery","weather","setWeather","search","evt","fetch","then","res","json","result","console","log","dateBuilder","d","months","days","day","getDay","date","getDate","month","getMonth","year","getFullYear","main","temp","e","target","value","name","sys","country","Date","Math","round"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\n//utilizes api from openweathermap.org \nconst api ={\n  key : \"14b09015307faec1135c77dddf821b09\",\n  base: \"https://api.openweathermap.org/data/2.5/\"\n\n}\n\nfunction App() {\n  const[query, setQuery] = useState('');\n  const [weather, setWeather] = useState({});\n\n  //function to get weather using fetch get request to retieve \n  //weather, query, imperial units, appID from API \n  const search = evt =>{\n    if (evt.key === \"Enter\"){\n      fetch(`${api.base}weather?q=${query}&units=imperial&APPID=${api.key}`)\n        .then(res => res.json())\n        .then(result => {\n          setQuery('');\n          setWeather(result);\n          console.log(result);\n        })\n\n    }\n  }\n\n  //dateBuilder const to give us the current month and dat\n  const dateBuilder =(d) =>{\n    let months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"]\n    let days = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\n\n    let day = days[d.getDay()]; //returns an index from 0-6 for day\n    let date = d.getDate(); \n    let month = months[d.getMonth()]; // returns index from 0-11 to represent month\n    let year = d.getFullYear();\n\n    return `${day} ${date} ${month} ${year}`\n  }\n  return ( \n    //if weather is greater than 68 degrees Farenheight, use warm class, else cold class\n    <div className={(typeof weather.main != \"undefined\")\n      ? ((weather.main.temp > 68) \n        ? 'app warm' \n        : 'app')\n      : 'app'}> \n\n      \n      <main>\n        <div className = \"search-box\">\n          <input \n          type =\"text\"\n          className =\"search-bar\"\n          placeholder =\"Search...\"\n          onChange={e => setQuery(e.target.value)}\n          value ={query}\n          onKeyPress={search}\n          />\n        </div>\n        {(typeof weather.main != \"undefined\") ? (\n        <div>\n          <div className=\"location-box\">\n            <div className=\"location\">{weather.name}, {weather.sys.country}</div> \n            <div className=\"date\">{dateBuilder(new Date())}</div>\n          </div>\n        <div className =\"weather-box\">\n          <div className =\"temp\">\n            {Math.round(weather.main.temp)}Â°F\n          </div>\n          <div className =\"weather\">{weather.weather[0].main}</div> \n        </div>\n      </div>\n        ) : ('') }\n        \n      </main>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}