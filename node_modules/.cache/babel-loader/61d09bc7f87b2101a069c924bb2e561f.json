{"ast":null,"code":"import _slicedToArray from\"/Users/sahil/weather-react/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from'react';//utilizes api from openweathermap.org \nvar api={key:\"14b09015307faec1135c77dddf821b09\",base:\"https://api.openweathermap.org/data/2.5/\"};function App(){var _useState=useState(''),_useState2=_slicedToArray(_useState,2),query=_useState2[0],setQuery=_useState2[1];var _useState3=useState({}),_useState4=_slicedToArray(_useState3,2),weather=_useState4[0],setWeather=_useState4[1];//function to get weather using fetch get request to retieve \n//weather, query, imperial units, appID from API \nvar search=function search(evt){if(evt.key===\"Enter\"){fetch(\"\".concat(api.base,\"weather?q=\").concat(query,\"&units=imperial&APPID=\").concat(api.key)).then(function(res){return res.json();}).then(function(result){setQuery('');setWeather(result);console.log(result);});}};//dateBuilder const to give us the current month and dat\nvar dateBuilder=function dateBuilder(d){var months=[\"January\",\"February\",\"March\",\"April\",\"May\",\"June\",\"July\",\"August\",\"September\",\"October\",\"November\",\"December\"];var days=[\"Sunday\",\"Monday\",\"Tuesday\",\"Wednesday\",\"Thursday\",\"Friday\",\"Saturday\"];var day=days[d.getDay()];//returns an index from 0-6 for day\nvar date=d.getDate();var month=months[d.getMonth()];// returns index from 0-11 to represent month\nvar year=d.getFullYear();return\"\".concat(day,\" \").concat(date,\" \").concat(month,\" \").concat(year);};return/*#__PURE__*/ //if weather is greater than 68 degrees Farenheight, use warm class, else cold class\nReact.createElement(\"div\",{className:typeof weather.main!=\"undefined\"?weather.main.temp>68?'app warm':'app':'app'},/*#__PURE__*/React.createElement(\"main\",null,/*#__PURE__*/React.createElement(\"div\",{className:\"search-box\"},/*#__PURE__*/React.createElement(\"input\",{type:\"text\",className:\"search-bar\",placeholder:\"Search...\",onChange:function onChange(e){return setQuery(e.target.value);},value:query,onKeyPress:search})),typeof weather.main!=\"undefined\"?/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"div\",{className:\"location-box\"},/*#__PURE__*/React.createElement(\"div\",{className:\"location\"},weather.name,\", \",weather.sys.country),/*#__PURE__*/React.createElement(\"div\",{className:\"date\"},dateBuilder(new Date()))),/*#__PURE__*/React.createElement(\"div\",{className:\"weather-box\"},/*#__PURE__*/React.createElement(\"div\",{className:\"temp\"},Math.round(weather.main.temp),\"\\xB0F\"),/*#__PURE__*/React.createElement(\"div\",{className:\"weather\"},weather.weather[0].main))):''));}export default App;","map":{"version":3,"sources":["/Users/sahil/weather-react/src/App.js"],"names":["React","useState","api","key","base","App","query","setQuery","weather","setWeather","search","evt","fetch","then","res","json","result","console","log","dateBuilder","d","months","days","day","getDay","date","getDate","month","getMonth","year","getFullYear","main","temp","e","target","value","name","sys","country","Date","Math","round"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\n//utilizes api from openweathermap.org \nconst api ={\n  key : \"14b09015307faec1135c77dddf821b09\",\n  base: \"https://api.openweathermap.org/data/2.5/\"\n\n}\n\nfunction App() {\n  const[query, setQuery] = useState('');\n  const [weather, setWeather] = useState({});\n\n  //function to get weather using fetch get request to retieve \n  //weather, query, imperial units, appID from API \n  const search = evt =>{\n    if (evt.key === \"Enter\"){\n      fetch(`${api.base}weather?q=${query}&units=imperial&APPID=${api.key}`)\n        .then(res => res.json())\n        .then(result => {\n          setQuery('');\n          setWeather(result);\n          console.log(result);\n        })\n\n    }\n  }\n\n  //dateBuilder const to give us the current month and dat\n  const dateBuilder =(d) =>{\n    let months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"]\n    let days = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\n\n    let day = days[d.getDay()]; //returns an index from 0-6 for day\n    let date = d.getDate(); \n    let month = months[d.getMonth()]; // returns index from 0-11 to represent month\n    let year = d.getFullYear();\n\n    return `${day} ${date} ${month} ${year}`\n  }\n  return ( \n    //if weather is greater than 68 degrees Farenheight, use warm class, else cold class\n    <div className={(typeof weather.main != \"undefined\")\n      ? ((weather.main.temp > 68) \n        ? 'app warm' \n        : 'app')\n      : 'app'}> \n\n      \n      <main>\n        <div className = \"search-box\">\n          <input \n          type =\"text\"\n          className =\"search-bar\"\n          placeholder =\"Search...\"\n          onChange={e => setQuery(e.target.value)}\n          value ={query}\n          onKeyPress={search}\n          />\n        </div>\n        {(typeof weather.main != \"undefined\") ? (\n        <div>\n          <div className=\"location-box\">\n            <div className=\"location\">{weather.name}, {weather.sys.country}</div> \n            <div className=\"date\">{dateBuilder(new Date())}</div>\n          </div>\n        <div className =\"weather-box\">\n          <div className =\"temp\">\n            {Math.round(weather.main.temp)}Â°F\n          </div>\n          <div className =\"weather\">{weather.weather[0].main}</div> \n        </div>\n      </div>\n        ) : ('') }\n        \n      </main>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}